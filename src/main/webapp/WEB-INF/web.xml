<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
	
	<display-name>recommend</display-name>
	<!--为了在jetty里面可以直接修改js里面的值，部署tomcat时需删除start-->
	<servlet>
	    <servlet-name>default</servlet-name>
	    <servlet-class>org.mortbay.jetty.servlet.DefaultServlet</servlet-class>
	    <init-param>
	      <param-name>useFileMappedBuffer</param-name>
	      <param-value>false</param-value>
	    </init-param>
	    <load-on-startup>0</load-on-startup>
	</servlet>
	<context-param>
		<param-name>javax.servlet.jsp.jstl.fmt.localizationContext</param-name>
		<param-value>ApplicationResources</param-value>
	</context-param>
	<context-param>
    	<param-name>javax.servlet.jsp.jstl.fmt.fallbackLocale</param-name>
    	<param-value>en</param-value>
  	</context-param>
    <!--为了在jetty里面可以直接修改js里面的值，部署tomcat时需删除end-->
  	<context-param>
    	<param-name>contextConfigLocation</param-name>
    	<param-value>
            classpath:/applicationContext-resources.xml
        	classpath:/applicationContext-mongodb.xml
        	classpath*:/applicationContext-recommend-dao.xml
            classpath*:/applicationContext-recommend-service.xml
            classpath*:/applicationContext-mongodb-service.xml
            classpath:/applicationContext-recommend-cache.xml
            classpath*:/applicationContext-cas.xml
            classpath:/applicationContext-recommend-job.xml
		</param-value>
  	</context-param>
  	<!-- =============sso config start================ -->
  	<filter>
    	<filter-name>CAS Single Sign Out Filter</filter-name>
    	<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    	<init-param>
      		<param-name>targetBeanName</param-name>
      		<param-value>singleSignOutFilter</param-value>
    	</init-param>
  	</filter>
  	<filter>
    	<filter-name>CAS Authentication Filter</filter-name>
    	<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    	<init-param>
      		<param-name>targetBeanName</param-name>
      		<param-value>authenticationFilter</param-value>
    	</init-param>
  	</filter>
  	<filter>
    	<filter-name>CAS Validation Filter</filter-name>
    	<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    	<init-param>
      		<param-name>targetBeanName</param-name>
      		<param-value>ticketValidationFilter</param-value>
    	</init-param>
  	</filter>
  	<filter>
    	<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
    	<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    	<init-param>
      		<param-name>targetBeanName</param-name>
      		<param-value>httpServletRequestWrapperFilter</param-value>
    	</init-param>
  	</filter>
  	<filter>
    	<filter-name>CAS Assertion Thread Local Filter</filter-name>
    	<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    	<init-param>
      		<param-name>targetBeanName</param-name>
      		<param-value>assertionThreadLocalFilter</param-value>
    	</init-param>
  	</filter>
  	<filter>
    	<filter-name>CAS Permission Validation Filter</filter-name>
    	<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    	<init-param>
      		<param-name>targetBeanName</param-name>
      		<param-value>permissionFilter</param-value>
    	</init-param>
  	</filter>
  	<filter-mapping>
    	<filter-name>CAS Single Sign Out Filter</filter-name>
    	<url-pattern>*.htm</url-pattern>
  	</filter-mapping>
  	<filter-mapping>
    	<filter-name>CAS Single Sign Out Filter</filter-name>
    	<url-pattern>*.json</url-pattern>
  	</filter-mapping>
  	<filter-mapping>
    	<filter-name>CAS Authentication Filter</filter-name>
    	<url-pattern>*.htm</url-pattern>
  	</filter-mapping>
  	<filter-mapping>
    	<filter-name>CAS Authentication Filter</filter-name>
    	<url-pattern>*.json</url-pattern>
  	</filter-mapping>
  	<filter-mapping>
    	<filter-name>CAS Validation Filter</filter-name>
    	<url-pattern>*.htm</url-pattern>
  	</filter-mapping>
 	<filter-mapping>
    	<filter-name>CAS Validation Filter</filter-name>
    	<url-pattern>*.json</url-pattern>
  	</filter-mapping>
  	<filter-mapping>
    	<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
    	<url-pattern>*.htm</url-pattern>
  	</filter-mapping>
  	<filter-mapping>
    	<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
    	<url-pattern>*.json</url-pattern>
  	</filter-mapping>
  	<filter-mapping>
    	<filter-name>CAS Assertion Thread Local Filter</filter-name>
    	<url-pattern>*.htm</url-pattern>
  	</filter-mapping>
  	<filter-mapping>
    	<filter-name>CAS Assertion Thread Local Filter</filter-name>
    	<url-pattern>*.json</url-pattern>
  	</filter-mapping>
  	<filter-mapping>
    	<filter-name>CAS Permission Validation Filter</filter-name>
    	<url-pattern>*.htm</url-pattern>
  	</filter-mapping>
  	<filter-mapping>
    	<filter-name>CAS Permission Validation Filter</filter-name>
    	<url-pattern>*.json</url-pattern>
  	</filter-mapping> 
  	<listener>
    	<listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
	</listener> 
	<!--===============sso config end======================--> 
	<!-- javamelody start -->
  	<filter>
    	<filter-name>javamelody</filter-name>
    	<filter-class>net.bull.javamelody.MonitoringFilter</filter-class>
  	</filter>
  	<filter-mapping>
    	<filter-name>javamelody</filter-name>
    	<url-pattern>/*</url-pattern>
  	</filter-mapping>
  	<listener>
    	<listener-class>net.bull.javamelody.SessionListener</listener-class>
  	</listener>
  	<servlet>
    	<servlet-name>monitoringServer</servlet-name>
    	<servlet-class>net.bull.javamelody.CollectorServlet</servlet-class>
    	<load-on-startup>1</load-on-startup>
  	</servlet>
  	<servlet-mapping>
    	<servlet-name>monitoringServer</servlet-name>
    	<url-pattern>/monitoringServer</url-pattern>
	</servlet-mapping>
	<!-- javamelody end -->
	
	<filter>
    	<filter-name>encodingFilter</filter-name>
    	<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    	<init-param>
      		<param-name>encoding</param-name>
      		<param-value>UTF-8</param-value>
    	</init-param>
    	<init-param>
      		<param-name>forceEncoding</param-name>
      		<param-value>true</param-value>
    	</init-param>
  	</filter>
  	
  	<filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
   		<dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
    </filter-mapping>

    <filter>
        <filter-name>localeFilter</filter-name>
        <filter-class>com.wondertek.mobilevideo.recommend.webapp.filter.LocaleFilter</filter-class>
    </filter>
	<filter-mapping>
        <filter-name>localeFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
    </filter-mapping>
	<filter>
    	<filter-name>rewriteFilter</filter-name>
    	<filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
    	<init-param>
      		<param-name>logLevel</param-name>
      		<param-value>error</param-value>
    	</init-param>
  	</filter>
  	<filter-mapping>
    	<filter-name>rewriteFilter</filter-name>
    	<url-pattern>/*</url-pattern>
    	<dispatcher>REQUEST</dispatcher>
    	<dispatcher>FORWARD</dispatcher>
	</filter-mapping>
  
	<filter>
	    <filter-name>struts2</filter-name>
	    <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	    <init-param>
	        <param-name>actionPackages</param-name>
	        <param-value>com.wondertek.mobilevideo.recommend.webapp.action</param-value>
	    </init-param>
	</filter>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>
  	<listener>
    	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  	</listener>
  	<listener>
    	<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  	</listener>
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	<listener>
		<listener-class>com.wondertek.mobilevideo.recommend.webapp.listener.StartupListener</listener-class>
	</listener>
  	<!--
  	<servlet>
		<servlet-name>dispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:applicationContext-web.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>dispatcherServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	-->
  	<servlet>
		<servlet-name>updateCache</servlet-name>
		<servlet-class>com.wondertek.mobilevideo.recommend.webapp.servlet.UpdateCacheServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>updateCache</servlet-name>
		<url-pattern>/updateCache</url-pattern>
	</servlet-mapping>
	
  	<session-config>
        <session-timeout>120</session-timeout>
    </session-config>
    
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
	<error-page>
        <error-code>500</error-code>
        <location>/error.jsp</location>
    </error-page>
    <error-page>
        <error-code>400</error-code>
        <location>/index.jsp</location>
    </error-page>
    <error-page>
        <error-code>403</error-code>
        <location>/403.jsp</location>
    </error-page>
    <error-page>
        <error-code>404</error-code>
        <location>/404.jsp</location>
    </error-page>
	<distributable />
</web-app>